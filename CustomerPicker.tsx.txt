import { useEffect, useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { bc } from '@services/bcClient';
import { X } from 'lucide-react';
import { z } from 'zod';

const schema = z.object({
  name: z.string().min(1, 'Required'),
  phone: z.string().optional(),
  taxId: z.string().optional(),
  address: z.string().optional()
});

export default function CustomerPicker({
  onSelect,
  onClose
}: {
  onSelect: (c: Awaited<ReturnType<typeof bc.listCustomers>>[number]) => void;
  onClose: () => void;
}) {
  const [q, setQ] = useState('');
  const { data } = useQuery({ queryKey: ['customers', q], queryFn: () => bc.listCustomers(q) });
  const [create, setCreate] = useState(false);
  const [form, setForm] = useState({ name: '', phone: '', taxId: '', address: '' });

  useEffect(() => {
    const handler = (e: KeyboardEvent) => { if (e.key === 'Escape') onClose(); };
    window.addEventListener('keydown', handler);
    return () => window.removeEventListener('keydown', handler);
  }, [onClose]);

  async function submitCreate() {
    const parsed = schema.safeParse(form);
    if (!parsed.success) return alert(parsed.error.issues[0].message);
    const c = await bc.createCustomer(parsed.data);
    onSelect(c);
  }

  return (
    <div className="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
      <div className="bg-white rounded-2xl shadow-lg w-[96vw] max-w-[720px] p-4">
        <div className="flex items-center justify-between mb-2">
          <h3 className="text-xl font-bold">Customer</h3>
          <button className="btn-icon" onClick={onClose} aria-label="Close"><X /></button>
        </div>
        {!create ? (
          <>
            <input className="input w-full" placeholder="Search by name/phoneâ€¦" value={q} onChange={(e) => setQ(e.target.value)} />
            <div className="mt-3 max-h-[300px] overflow-auto divide-y">
              {(data || []).map((c) => (
                <button key={c.id} className="w-full text-left py-2 hover:bg-gray-50" onClick={() => onSelect(c)}>
                  <div className="font-medium">{c.name}</div>
                  <div className="text-xs text-gray-500">{c.phone || '-'}</div>
                </button>
              ))}
            </div>
            <button className="btn-outline mt-3" onClick={() => setCreate(true)}>Create</button>
          </>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            {(['name', 'phone', 'taxId', 'address'] as const).map((k) => (
              <label key={k}>
                <span className="text-sm capitalize">{k}</span>
                <input className="input w-full" value={(form as any)[k]} onChange={(e) => setForm({ ...form, [k]: e.target.value })}/>
              </label>
            ))}
            <div className="md:col-span-2 flex gap-2 mt-2">
              <button className="btn-outline" onClick={() => setCreate(false)}>Back</button>
              <button className="btn-primary" onClick={submitCreate}>Save</button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
